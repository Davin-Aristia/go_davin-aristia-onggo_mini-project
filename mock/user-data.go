package mock

import (
	"go-mini-project/model"
	"go-mini-project/dto"

	mock "github.com/stretchr/testify/mock"
)

// UserData is an autogenerated mock type for the Data type
type UserData struct {
	mock.Mock
}

// InsertData provides a mock function with given fields: data
func (_m *UserData) Create(data model.User) (model.User, error) {
    ret := _m.Called(data)

    var r0 model.User
    if rf, ok := ret.Get(0).(func(model.User) model.User); ok {
        r0 = rf(data)
    } else {
        r0 = ret.Get(0).(model.User)
    }

    var r1 error
    if rf, ok := ret.Get(1).(func(model.User) error); ok {
        r1 = rf(data)
    } else {
        r1 = ret.Error(1)
    }

    return r0, r1
}

func (_m *UserData) CheckUserExist(email string, password string) (dto.UserResponse, error) {
    ret := _m.Called(email, password)

    var r0 dto.UserResponse
    if rf, ok := ret.Get(0).(func(string, string) dto.UserResponse); ok {
        r0 = rf(email, password)
    } else {
        r0 = ret.Get(0).(dto.UserResponse)
    }

    var r1 error
    if rf, ok := ret.Get(1).(func(string, string) error); ok {
        r1 = rf(email, password)
    } else {
        r1 = ret.Error(1)
    }

    return r0, r1
}